CREATE DATABASE BANK;

USE BANK;

CREATE OR REPLACE TABLE ACCOUNT(
account_id INT PRIMARY KEY,
district_id	INT,
frequency	VARCHAR(40),
Date DATE ,
Account_Type VARCHAR(100) ,
Card_Assigned VARCHAR(20),
FOREIGN KEY (district_id) references DISTRICT(District_Code) 
);


CREATE OR REPLACE TABLE DISTRICT(
District_Code INT PRIMARY KEY	,
District_Name VARCHAR(100)	,
Region VARCHAR(100)	,
No_of_inhabitants	INT,
No_of_municipalities_with_inhabitants_less_499 INT,
No_of_municipalities_with_inhabitants_500_btw_1999	INT,
No_of_municipalities_with_inhabitants_2000_btw_9999	INT,
No_of_municipalities_with_inhabitants_less_10000 INT,	
No_of_cities	INT,
Ratio_of_urban_inhabitants	FLOAT,
Average_salary	INT,
No_of_entrepreneurs_per_1000_inhabitants INT,
No_committed_crime_2017	INT,
No_committed_crime_2018 INT
) ;

CREATE OR REPLACE TABLE ORDER_LIST (
order_id	INT PRIMARY KEY,
account_id	INT,
bank_to	VARCHAR(45),
account_to	INT,
amount FLOAT,
FOREIGN KEY (account_id) references ACCOUNT(account_id)
);



CREATE OR REPLACE TABLE LOAN(
loan_id	INT ,
account_id	INT,
Date	DATE,
amount	INT,
duration	INT,
payments	INT,
status VARCHAR(35),
FOREIGN KEY (account_id) references ACCOUNT(account_id)
);



CREATE OR REPLACE TABLE TRANSACTIONS(
trans_id INT,	
account_id	INT,
Date	DATE,
Type	VARCHAR(30),
operation	VARCHAR(40),
amount	INT,
balance	FLOAT,
Purpose	VARCHAR(40),
bank	VARCHAR(45),
account_partner_id INT,
FOREIGN KEY (account_id) references ACCOUNT(account_id));


CREATE OR REPLACE TABLE CLIENT(
client_id	INT PRIMARY KEY,
Sex	CHAR(10),
Birth_date	DATE,
district_id INT,
FOREIGN KEY (district_id) references DISTRICT(District_Code) 
);


CREATE OR REPLACE TABLE DISPOSITION(
disp_id	INT PRIMARY KEY,
client_id INT,
account_id	INT,
type CHAR(15),
FOREIGN KEY (account_id) references ACCOUNT(account_id),
FOREIGN KEY (client_id) references CLIENT(client_id)
);


CREATE OR REPLACE TABLE CARD(
card_id	INT PRIMARY KEY,
disp_id	INT,
type CHAR(10)	,
issued DATE,
FOREIGN KEY (disp_id) references DISPOSITION(disp_id)
);

-- CREATING A STORAGE INTEGRATION

CREATE OR REPLACE STORAGE INTEGRATION S3_INT
TYPE = EXTERNAL_STAGE
ENABLED = TRUE
STORAGE_PROVIDER = S3
STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::628143499237:role/czech_bank_role'
STORAGE_ALLOWED_LOCATIONS = ('S3://czechbankj/');

DESC INTEGRATION S3_INT;

-- CREATING A STAGE FOR bucket IN S3

CREATE OR REPLACE STAGE CZECH_BANK
URL = 'S3://czechbankj/'
STORAGE_INTEGRATION = S3_INT
FILE_FORMAT = CSV;

SHOW STAGES;

LIST @CZECH_BANK;

/*   NEXT STEP IS TO CREATE 8 PIPES FOR EACH OF THE  FOLDERS IN S3 BUCKET 
TO LOAD DATA INTO SNOWFLAKE TABLES FROM STAGE   */

 # 1) CREATION OF PIPE FOR ACCOUNT TABLE
 
CREATE OR REPLACE PIPE BANK_PIPE_ACCOUNT
AUTO_INGEST = TRUE
AS 
COPY INTO "BANK"."PUBLIC"."ACCOUNT"
FROM '@CZECH_BANK/Account/'    -- give the STAGE NAME After @ and the folder name of s3 bucket
FILE_FORMAT = CSV;

SHOW PIPES;

SELECT SYSTEM$PIPE_STATUS('BANK_PIPE_ACCOUNT'); -- TO CHECK THE STATUS OF THE PIPE

 # 2) CREATION OF PIPE FOR CARD TABLE
;
CREATE OR REPLACE PIPE BANK_PIPE_CARD
AUTO_INGEST = TRUE
AS COPY INTO "BANK"."PUBLIC"."CARD"
FROM '@CZECH_BANK/card/'
FILE_FORMAT = CSV;

SELECT SYSTEM$PIPE_STATUS('BANK_PIPE_CARD');

 # 3) CREATION OF PIPE FOR CLIENT TABLE;
 ;
 
 CREATE OR REPLACE PIPE BANK_PIPE_CLIENT
 AUTO_INGEST = TRUE
 AS COPY INTO "BANK"."PUBLIC"."CLIENT"
 FROM '@CZECH_BANK/client/'
 FILE_FORMAT = CSV;
 
 SHOW PIPES;
 SELECT SYSTEM$PIPE_STATUS('BANK_PIPE_CLIENT');
 
 
 # 4) CREATION OF PIPE FOR DISPOSITION TABLE;
 ;
 CREATE OR REPLACE PIPE BANK_PIPE_DISPOSITION
 AUTO_INGEST = TRUE
 AS COPY INTO "BANK"."PUBLIC"."DISPOSITION"
 FROM '@CZECH_BANK/disp/'
 FILE_FORMAT = CSV;
 
 
 -- 5) CREATION OF PIPE FOR DISTRICT TABLE;
 ;
  CREATE OR REPLACE PIPE BANK_PIPE_DISTRICT
 AUTO_INGEST = TRUE
 AS COPY INTO "BANK"."PUBLIC"."DISTRICT"
 FROM '@CZECH_BANK/district/'
 FILE_FORMAT = CSV;
 
 
 # 6) CREATION OF PIPE FOR LOAN TABLE;
 ;
 
 CREATE OR REPLACE PIPE BANK_PIPE_LOAN
 AUTO_INGEST = TRUE
 AS COPY INTO "BANK"."PUBLIC"."LOAN"
 FROM '@CZECH_BANK/loan/'
 FILE_FORMAT = CSV;
 
 
 # 7) CREATION OF PIPE FOR ORDER TABLE;
 ;
  CREATE OR REPLACE PIPE BANK_PIPE_ORDER
 AUTO_INGEST = TRUE
 AS COPY INTO "BANK"."PUBLIC"."ORDER_LIST"
 FROM '@CZECH_BANK/order/'
 FILE_FORMAT = CSV;
 

 # 8) CREATION OF PIPE FOR TRANSACTIONS TABLE; 
 ;
 
 CREATE OR REPLACE PIPE BANK_PIPE_TRANSACTIONS
 AUTO_INGEST = TRUE
 AS COPY INTO "BANK"."PUBLIC"."TRANSACTIONS"
 FROM '@CZECH_BANK/trsnx/'
 FILE_FORMAT = CSV;
 
 -- TO CHECK THE STATUS OF THE PIPE USE ALTER COMMAND;
 ;
 ALTER PIPE BANK_PIPE_DISTRICT REFRESH; 
 ALTER PIPE BANK_PIPE_ACCOUNT REFRESH;
 ALTER PIPE BANK_PIPE_CARD REFRESH;
 ALTER PIPE BANK_PIPE_CLIENT REFRESH;
 ALTER PIPE BANK_PIPE_TRANSACTIONS REFRESH;
 
